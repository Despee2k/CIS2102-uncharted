// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum RecipeApprovalStatus {
  PENDING
  APPROVED
  DISAPPROVED
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  bio String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  recipes Recipe[]
  ratings RecipeRating[]
  
  @@map("users")
}

model Recipe {
  id          Int      @id @default(autoincrement())
  title       String
  picture     String
  description String
  servings    Int
  prepTime    Int
  category    String
  ingredients RecipeIngredient[]
  procedure   RecipeProcedure[]
  
  authorId Int
  author   User    @relation(fields: [authorId], references: [id])

  approvalStatus RecipeApprovalStatus @default(PENDING)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  totalRating Float @default(0)
  totalRatings Int @default(0)
  ratings RecipeRating[]

  @@map("recipes")
}

model RecipeRating {
  id         Int      @id @default(autoincrement())
  recipeId   Int
  userId     Int
  rating     Float
  recipe     Recipe   @relation(fields: [recipeId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@unique([recipeId, userId])
  @@map("recipe_ratings")
}

model RecipeIngredient {
  id         Int    @id @default(autoincrement())
  recipeId   Int
  ingredient String
  recipe     Recipe @relation(fields: [recipeId], references: [id])

  @@map("recipe_ingredients")
}

model RecipeProcedure {
  id       Int    @id @default(autoincrement())
  recipeId Int
  step     String
  recipe   Recipe @relation(fields: [recipeId], references: [id])

  @@map("recipe_procedures")
}